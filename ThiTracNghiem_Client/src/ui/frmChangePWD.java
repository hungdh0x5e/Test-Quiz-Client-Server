/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import ProcessSocket.Client;
import Entity.Account;
import javax.swing.JOptionPane;
import Work.Check;
import Work.MD5Encryption;

/**
 *
 * @author HuyHung
 */
public class frmChangePWD extends javax.swing.JFrame {

    /**
     * Creates new form ChangePassword
     */
    private Account acc = new Account();
    private Client client = new Client();

    public frmChangePWD(Client client, Account acc) {
        this.client = client;
        this.acc = acc;
        initComponents();
        lbUser.setText(acc.getUsername());
        setLocation(450, 220);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btAccept = new javax.swing.JButton();
        btReset = new javax.swing.JButton();
        lbUser = new javax.swing.JLabel();
        tfCurrent = new javax.swing.JPasswordField();
        tfNew = new javax.swing.JPasswordField();
        tfConfirm = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Change Password");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Password", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("Mật khẩu mới");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Mật khẩu hiện tại");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("User: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("Nhập lại mật khẩu");

        btAccept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/accept.png"))); // NOI18N
        btAccept.setText("Accept");
        btAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAcceptActionPerformed(evt);
            }
        });

        btReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/reset.png"))); // NOI18N
        btReset.setText("Reset");
        btReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResetActionPerformed(evt);
            }
        });

        lbUser.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbUser.setForeground(new java.awt.Color(255, 0, 0));
        lbUser.setText("lbUser");

        tfCurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCurrentActionPerformed(evt);
            }
        });

        tfNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNewActionPerformed(evt);
            }
        });

        tfConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbUser)
                    .addComponent(tfCurrent)
                    .addComponent(tfNew)
                    .addComponent(tfConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAccept)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btAccept, btReset});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btReset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btAccept, btReset});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAcceptActionPerformed
        if (kt()) {
            String newPwd = String.valueOf(tfNew.getPassword());
            Account reqAcc = new Account(lbUser.getText(), newPwd);
            client.changePass(reqAcc);
            this.dispose();
        }
    }//GEN-LAST:event_btAcceptActionPerformed


    private void btResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResetActionPerformed
        tfCurrent.setText("");
        tfNew.setText("");
        tfConfirm.setText("");
        tfCurrent.requestFocus();
    }//GEN-LAST:event_btResetActionPerformed

    private void tfNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNewActionPerformed
        tfConfirm.requestFocus();
    }//GEN-LAST:event_tfNewActionPerformed

    private void tfConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfConfirmActionPerformed
        btAccept.doClick();
    }//GEN-LAST:event_tfConfirmActionPerformed

    private void tfCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCurrentActionPerformed
        tfNew.requestFocus();
    }//GEN-LAST:event_tfCurrentActionPerformed

    /**
     * @param args the command line arguments
     */
    private boolean kt() {
        boolean check = true;
        Check ck = new Check();
        if (String.valueOf(tfCurrent.getPassword()).equals("")) {
            check = false;
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu hiện tại !",
                    "  Đổi mật khẩu", 0);
            tfCurrent.requestFocus();
        } else if (String.valueOf(tfNew.getPassword()).equals("")) {
            check = false;
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu mới !",
                    "  Đổi mật khẩu", 0);
            tfNew.requestFocus();
        } else if (String.valueOf(tfConfirm.getPassword()).equals("")) {
            check = false;
            JOptionPane.showMessageDialog(this, "Vui lòng nhập lại mật khẩu mới !",
                    "  Đổi mật khẩu", 0);
            tfConfirm.requestFocus();
        } else if (!MD5Encryption.encrypt(String.valueOf(tfCurrent.getPassword())).equals(acc.getPassword())) {
            check = false;
            JOptionPane.showMessageDialog(this, "Mật khẩu hiện tại không đúng !",
                    "    Đổi mật khẩu", 0);
        } else if (!String.valueOf(tfConfirm.getPassword()).equals(String.valueOf(tfNew.getPassword()))) {
            check = false;
            JOptionPane.showMessageDialog(this, "Mật khẩu mới không trùng nhau !",
                    "    Đổi mật khẩu", 0);
        } else if (!ck.checkUsername(String.valueOf(tfConfirm.getPassword()))) {
            check = false;
            JOptionPane.showMessageDialog(this, "Mật khẩu chỉ chấp nhận các kí tự a-z,A-Z,0-9,_ !",
                    "    Đổi mật khẩu", 0);
        }
        return check;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAccept;
    private javax.swing.JButton btReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbUser;
    private javax.swing.JPasswordField tfConfirm;
    private javax.swing.JPasswordField tfCurrent;
    private javax.swing.JPasswordField tfNew;
    // End of variables declaration//GEN-END:variables
}
